kind: pipeline
type: docker
name: build and deploy

platform:
    os: linux
    arch: arm

# Mount the docker socket from the host so we can access the local docker registry
volumes:
    - name: docker-socket
      host:
          path: /var/run/docker.sock

steps:

    - name: Download configuration
      image: plugins/download
      settings:
        source: http://pi-hub:5002/homescreen/config.json
        destination: api/config/config.json

    # build
    - name: build
      image: plugins/docker
      pull: if-not-exists
      environment:
          APP_ENV: prod
      volumes:
          - name: docker-socket
            path: /var/run/docker.sock
      settings:
          repo: registry.tijink.de/${DRONE_REPO_NAME}
          tags: latest
          target: production
          registry: registry.tijink.de
          purge: true
      depends_on:
          - Download configuration

    - name: lint PHP files
      image: registry.tijink.de/${DRONE_REPO_NAME}
      commands:
          - find /var/www/api/src -type f -name '*.php' -print0 | xargs -0 -n1 -P4 php -l -n
      depends_on:
          - build

    - name: lint yaml files
      image: registry.tijink.de/${DRONE_REPO_NAME}
      environment:
          APP_ENV: prod
      commands:
          - php /var/www/api/bin/console lint:yaml /var/www/api/config/
      depends_on:
          - build

    - name: lint container
      image: registry.tijink.de/${DRONE_REPO_NAME}
      environment:
          APP_ENV: prod
      commands:
          - php /var/www/api/bin/console lint:container
      depends_on:
          - build

    - name: validate composer.json
      image: composer
      commands:
          - composer validate --working-dir=./api
      depends_on:
          - build

    # deploy
    - name: deploy into swarm
      image: arm32v7/docker
      pull: if-not-exists
      volumes:
          - name: docker-socket
            path: /var/run/docker.sock
      commands:
          - docker stack deploy -c docker-compose.prod.yml ${DRONE_REPO_NAME}
      depends_on:
        - lint PHP files
        - lint yaml files
        - lint container
        - validate composer.json
